   1              	 .cpu cortex-m0
   2              	 .eabi_attribute 20,1
   3              	 .eabi_attribute 21,1
   4              	 .eabi_attribute 23,3
   5              	 .eabi_attribute 24,1
   6              	 .eabi_attribute 25,1
   7              	 .eabi_attribute 26,1
   8              	 .eabi_attribute 30,4
   9              	 .eabi_attribute 34,0
  10              	 .eabi_attribute 18,4
  11              	 .file "smack_dataexchange.c"
  12              	 .text
  13              	.Ltext0:
  14              	 .cfi_sections .debug_frame
  15              	 .section .text.vars_init,"ax",%progbits
  16              	 .align 1
  17              	 .global vars_init
  18              	 .arch armv6s-m
  19              	 .syntax unified
  20              	 .code 16
  21              	 .thumb_func
  22              	 .fpu softvfp
  24              	vars_init:
  25              	.LFB49:
  26              	 .file 1 "Z:/Documents/GitHub/OpenSesame/smack_sl/src/smack_dataexchange.c"
   1:Z:/Documents/GitHub/OpenSesame/smack_sl/src\smack_dataexchange.c **** /* ============================================================================
   2:Z:/Documents/GitHub/OpenSesame/smack_sl/src\smack_dataexchange.c **** ** Copyright (c) 2022 Infineon Technologies AG
   3:Z:/Documents/GitHub/OpenSesame/smack_sl/src\smack_dataexchange.c **** **               All rights reserved.
   4:Z:/Documents/GitHub/OpenSesame/smack_sl/src\smack_dataexchange.c **** **               www.infineon.com
   5:Z:/Documents/GitHub/OpenSesame/smack_sl/src\smack_dataexchange.c **** ** ============================================================================
   6:Z:/Documents/GitHub/OpenSesame/smack_sl/src\smack_dataexchange.c **** **
   7:Z:/Documents/GitHub/OpenSesame/smack_sl/src\smack_dataexchange.c **** ** ============================================================================
   8:Z:/Documents/GitHub/OpenSesame/smack_sl/src\smack_dataexchange.c **** ** Redistribution and use of this software only permitted to the extent
   9:Z:/Documents/GitHub/OpenSesame/smack_sl/src\smack_dataexchange.c **** ** expressly agreed with Infineon Technologies AG.
  10:Z:/Documents/GitHub/OpenSesame/smack_sl/src\smack_dataexchange.c **** ** ============================================================================
  11:Z:/Documents/GitHub/OpenSesame/smack_sl/src\smack_dataexchange.c **** *
  12:Z:/Documents/GitHub/OpenSesame/smack_sl/src\smack_dataexchange.c **** */
  13:Z:/Documents/GitHub/OpenSesame/smack_sl/src\smack_dataexchange.c **** 
  14:Z:/Documents/GitHub/OpenSesame/smack_sl/src\smack_dataexchange.c **** /** @file     smack_dataexchange.c
  15:Z:/Documents/GitHub/OpenSesame/smack_sl/src\smack_dataexchange.c ****  *  @brief    Smack example: data declarations for the data exchange library.
  16:Z:/Documents/GitHub/OpenSesame/smack_sl/src\smack_dataexchange.c ****  *
  17:Z:/Documents/GitHub/OpenSesame/smack_sl/src\smack_dataexchange.c ****  *  This example defines a few datapoints, most of them with no further functionality,
  18:Z:/Documents/GitHub/OpenSesame/smack_sl/src\smack_dataexchange.c ****  *  which are offered to an NFC reader through the data exchange library. An NFC reader
  19:Z:/Documents/GitHub/OpenSesame/smack_sl/src\smack_dataexchange.c ****  *  can read or write these datapoints using the data exchange protocol.
  20:Z:/Documents/GitHub/OpenSesame/smack_sl/src\smack_dataexchange.c ****  *  The reader writes a request frame to the mailbox and triggers evaluation by issuing
  21:Z:/Documents/GitHub/OpenSesame/smack_sl/src\smack_dataexchange.c ****  *  a CALL_APP command. The reader and the NAC1080 firmware must agree upon the CALL_APP
  22:Z:/Documents/GitHub/OpenSesame/smack_sl/src\smack_dataexchange.c ****  *  number, and the callback function of the data exchange library must be listed in the
  23:Z:/Documents/GitHub/OpenSesame/smack_sl/src\smack_dataexchange.c ****  *  appropriate entry in APARAM (see app_prog[0] in sl_aparam.c).
  24:Z:/Documents/GitHub/OpenSesame/smack_sl/src\smack_dataexchange.c ****  */
  25:Z:/Documents/GitHub/OpenSesame/smack_sl/src\smack_dataexchange.c **** 
  26:Z:/Documents/GitHub/OpenSesame/smack_sl/src\smack_dataexchange.c **** // standard libs
  27:Z:/Documents/GitHub/OpenSesame/smack_sl/src\smack_dataexchange.c **** // included by core_cm0.h: #include <stdint.h>
  28:Z:/Documents/GitHub/OpenSesame/smack_sl/src\smack_dataexchange.c **** #include <stddef.h>
  29:Z:/Documents/GitHub/OpenSesame/smack_sl/src\smack_dataexchange.c **** #include "core_cm0.h"
  30:Z:/Documents/GitHub/OpenSesame/smack_sl/src\smack_dataexchange.c **** #include <stdbool.h>
  31:Z:/Documents/GitHub/OpenSesame/smack_sl/src\smack_dataexchange.c **** #include <string.h>
  32:Z:/Documents/GitHub/OpenSesame/smack_sl/src\smack_dataexchange.c **** 
  33:Z:/Documents/GitHub/OpenSesame/smack_sl/src\smack_dataexchange.c **** // Smack ROM lib
  34:Z:/Documents/GitHub/OpenSesame/smack_sl/src\smack_dataexchange.c **** #include "rom_lib.h"
  35:Z:/Documents/GitHub/OpenSesame/smack_sl/src\smack_dataexchange.c **** #include "nvm_params.h"
  36:Z:/Documents/GitHub/OpenSesame/smack_sl/src\smack_dataexchange.c **** 
  37:Z:/Documents/GitHub/OpenSesame/smack_sl/src\smack_dataexchange.c **** // Smack NVM lib
  38:Z:/Documents/GitHub/OpenSesame/smack_sl/src\smack_dataexchange.c **** #include "aes_lib.h"
  39:Z:/Documents/GitHub/OpenSesame/smack_sl/src\smack_dataexchange.c **** #include "smack_exchange.h"
  40:Z:/Documents/GitHub/OpenSesame/smack_sl/src\smack_dataexchange.c **** #include "inet_lib.h"
  41:Z:/Documents/GitHub/OpenSesame/smack_sl/src\smack_dataexchange.c **** 
  42:Z:/Documents/GitHub/OpenSesame/smack_sl/src\smack_dataexchange.c **** // smack_sl project
  43:Z:/Documents/GitHub/OpenSesame/smack_sl/src\smack_dataexchange.c **** #include "smack_sl.h"
  44:Z:/Documents/GitHub/OpenSesame/smack_sl/src\smack_dataexchange.c **** #include "smack_dataexchange.h"
  45:Z:/Documents/GitHub/OpenSesame/smack_sl/src\smack_dataexchange.c **** 
  46:Z:/Documents/GitHub/OpenSesame/smack_sl/src\smack_dataexchange.c **** 
  47:Z:/Documents/GitHub/OpenSesame/smack_sl/src\smack_dataexchange.c **** 
  48:Z:/Documents/GitHub/OpenSesame/smack_sl/src\smack_dataexchange.c **** //-------------------------------------------------------------
  49:Z:/Documents/GitHub/OpenSesame/smack_sl/src\smack_dataexchange.c **** // globals/statics
  50:Z:/Documents/GitHub/OpenSesame/smack_sl/src\smack_dataexchange.c **** 
  51:Z:/Documents/GitHub/OpenSesame/smack_sl/src\smack_dataexchange.c **** // The following variables are simply placeholders to be listen in data_point_list[]
  52:Z:/Documents/GitHub/OpenSesame/smack_sl/src\smack_dataexchange.c **** 
  53:Z:/Documents/GitHub/OpenSesame/smack_sl/src\smack_dataexchange.c **** static uint64_t uid;
  54:Z:/Documents/GitHub/OpenSesame/smack_sl/src\smack_dataexchange.c **** static uint64_t scratch64;
  55:Z:/Documents/GitHub/OpenSesame/smack_sl/src\smack_dataexchange.c **** static uint8_t scratch8;
  56:Z:/Documents/GitHub/OpenSesame/smack_sl/src\smack_dataexchange.c **** static uint8_t scratch_str[100];
  57:Z:/Documents/GitHub/OpenSesame/smack_sl/src\smack_dataexchange.c **** static uint8_t count8;
  58:Z:/Documents/GitHub/OpenSesame/smack_sl/src\smack_dataexchange.c **** 
  59:Z:/Documents/GitHub/OpenSesame/smack_sl/src\smack_dataexchange.c **** // measured values
  60:Z:/Documents/GitHub/OpenSesame/smack_sl/src\smack_dataexchange.c **** static int16_t temperature;
  61:Z:/Documents/GitHub/OpenSesame/smack_sl/src\smack_dataexchange.c **** static int16_t humidity;
  62:Z:/Documents/GitHub/OpenSesame/smack_sl/src\smack_dataexchange.c **** static int16_t pressure;
  63:Z:/Documents/GitHub/OpenSesame/smack_sl/src\smack_dataexchange.c **** static int32_t m_reserved;
  64:Z:/Documents/GitHub/OpenSesame/smack_sl/src\smack_dataexchange.c **** 
  65:Z:/Documents/GitHub/OpenSesame/smack_sl/src\smack_dataexchange.c **** static const aes_block_t aes_default_key =
  66:Z:/Documents/GitHub/OpenSesame/smack_sl/src\smack_dataexchange.c **** {
  67:Z:/Documents/GitHub/OpenSesame/smack_sl/src\smack_dataexchange.c ****     {
  68:Z:/Documents/GitHub/OpenSesame/smack_sl/src\smack_dataexchange.c ****         0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0x0a, 0x0b, 0x0c, 0x0d, 0x0e, 0
  69:Z:/Documents/GitHub/OpenSesame/smack_sl/src\smack_dataexchange.c ****     }
  70:Z:/Documents/GitHub/OpenSesame/smack_sl/src\smack_dataexchange.c **** };
  71:Z:/Documents/GitHub/OpenSesame/smack_sl/src\smack_dataexchange.c **** 
  72:Z:/Documents/GitHub/OpenSesame/smack_sl/src\smack_dataexchange.c **** 
  73:Z:/Documents/GitHub/OpenSesame/smack_sl/src\smack_dataexchange.c **** //-------------------------------------------------------------
  74:Z:/Documents/GitHub/OpenSesame/smack_sl/src\smack_dataexchange.c **** // data point list
  75:Z:/Documents/GitHub/OpenSesame/smack_sl/src\smack_dataexchange.c **** 
  76:Z:/Documents/GitHub/OpenSesame/smack_sl/src\smack_dataexchange.c **** static const data_point_entry_t data_point_list[] =
  77:Z:/Documents/GitHub/OpenSesame/smack_sl/src\smack_dataexchange.c **** {
  78:Z:/Documents/GitHub/OpenSesame/smack_sl/src\smack_dataexchange.c ****     // id               type                                             length             element
  79:Z:/Documents/GitHub/OpenSesame/smack_sl/src\smack_dataexchange.c ****     // status
  80:Z:/Documents/GitHub/OpenSesame/smack_sl/src\smack_dataexchange.c ****     {0x0004,            data_point_uint64,                               sizeof(uint64_t),  &uid,  
  81:Z:/Documents/GitHub/OpenSesame/smack_sl/src\smack_dataexchange.c ****     {0x0005,            data_point_uint64,                               sizeof(uint64_t),  &scratc
  82:Z:/Documents/GitHub/OpenSesame/smack_sl/src\smack_dataexchange.c ****     {0x0030,            data_point_uint8,                                sizeof(uint8_t),   &count8
  83:Z:/Documents/GitHub/OpenSesame/smack_sl/src\smack_dataexchange.c ****     {0x0080,            data_point_int16,                                sizeof(uint16_t),  &temper
  84:Z:/Documents/GitHub/OpenSesame/smack_sl/src\smack_dataexchange.c ****     {0x0081,            data_point_int16,                                sizeof(uint16_t),  &humidi
  85:Z:/Documents/GitHub/OpenSesame/smack_sl/src\smack_dataexchange.c ****     {0x0082,            data_point_int16,                                sizeof(uint16_t),  &pressu
  86:Z:/Documents/GitHub/OpenSesame/smack_sl/src\smack_dataexchange.c ****     {0x0083,            data_point_int32,                                sizeof(uint32_t),  &m_rese
  87:Z:/Documents/GitHub/OpenSesame/smack_sl/src\smack_dataexchange.c ****     {0x1800,            data_point_int64  | data_point_write,            sizeof(int64_t),   &scratc
  88:Z:/Documents/GitHub/OpenSesame/smack_sl/src\smack_dataexchange.c ****     {0x1801,            data_point_string | data_point_write,            sizeof(scratch_str) - 1, &
  89:Z:/Documents/GitHub/OpenSesame/smack_sl/src\smack_dataexchange.c ****     {0x1900,            data_point_uint8  | data_point_write,            sizeof(uint8_t),   &scratc
  90:Z:/Documents/GitHub/OpenSesame/smack_sl/src\smack_dataexchange.c ****     {0xF000,            data_point_uint32 | data_point_write,            sizeof(sl_counter),&sl_cou
  91:Z:/Documents/GitHub/OpenSesame/smack_sl/src\smack_dataexchange.c ****     {0xF002,            data_point_uint8  | data_point_write,            sizeof(scratch8),  &scratc
  92:Z:/Documents/GitHub/OpenSesame/smack_sl/src\smack_dataexchange.c **** };
  93:Z:/Documents/GitHub/OpenSesame/smack_sl/src\smack_dataexchange.c **** static const uint16_t data_point_count = (sizeof(data_point_list) / sizeof(data_point_list[0]));
  94:Z:/Documents/GitHub/OpenSesame/smack_sl/src\smack_dataexchange.c **** 
  95:Z:/Documents/GitHub/OpenSesame/smack_sl/src\smack_dataexchange.c **** 
  96:Z:/Documents/GitHub/OpenSesame/smack_sl/src\smack_dataexchange.c **** //-------------------------------------------------------------
  97:Z:/Documents/GitHub/OpenSesame/smack_sl/src\smack_dataexchange.c **** 
  98:Z:/Documents/GitHub/OpenSesame/smack_sl/src\smack_dataexchange.c **** // Initialize the Smack exchange library with our datapoint list.
  99:Z:/Documents/GitHub/OpenSesame/smack_sl/src\smack_dataexchange.c **** void vars_init(void)
 100:Z:/Documents/GitHub/OpenSesame/smack_sl/src\smack_dataexchange.c **** {
  27              	 .loc 1 100 1 view-0
  28              	 .cfi_startproc
  29              	 
  30              	 
 101:Z:/Documents/GitHub/OpenSesame/smack_sl/src\smack_dataexchange.c ****     count8 = 1;
  31              	 .loc 1 101 5 view .LVU1
  32              	 .loc 1 101 12 is_stmt 0 view .LVU2
  33 0000 0122     	 movs r2,#1
  34 0002 144B     	 ldr r3,.L2
 100:Z:/Documents/GitHub/OpenSesame/smack_sl/src\smack_dataexchange.c ****     count8 = 1;
  35              	 .loc 1 100 1 view .LVU3
  36 0004 70B5     	 push {r4,r5,r6,lr}
  37              	.LCFI0:
  38              	 .cfi_def_cfa_offset 16
  39              	 .cfi_offset 4,-16
  40              	 .cfi_offset 5,-12
  41              	 .cfi_offset 6,-8
  42              	 .cfi_offset 14,-4
  43              	 .loc 1 101 12 view .LVU4
  44 0006 1A70     	 strb r2,[r3]
 102:Z:/Documents/GitHub/OpenSesame/smack_sl/src\smack_dataexchange.c ****     uid = ((uint64_t)dparams.chip_uid.uid[0] << 48) |
  45              	 .loc 1 102 5 is_stmt 1 view .LVU5
  46              	 .loc 1 102 12 is_stmt 0 view .LVU6
  47 0008 E023     	 movs r3,#224
 103:Z:/Documents/GitHub/OpenSesame/smack_sl/src\smack_dataexchange.c ****           ((uint64_t)dparams.chip_uid.uid[1] << 40) |
 104:Z:/Documents/GitHub/OpenSesame/smack_sl/src\smack_dataexchange.c ****           ((uint64_t)dparams.chip_uid.uid[2] << 32) |
 105:Z:/Documents/GitHub/OpenSesame/smack_sl/src\smack_dataexchange.c ****           ((uint64_t)dparams.chip_uid.uid[3] << 24) |
 106:Z:/Documents/GitHub/OpenSesame/smack_sl/src\smack_dataexchange.c ****           ((uint64_t)dparams.chip_uid.uid[4] << 16) |
 107:Z:/Documents/GitHub/OpenSesame/smack_sl/src\smack_dataexchange.c ****           ((uint64_t)dparams.chip_uid.uid[5] <<  8) |
 108:Z:/Documents/GitHub/OpenSesame/smack_sl/src\smack_dataexchange.c ****           ((uint64_t)dparams.chip_uid.uid[6] <<  0);
 109:Z:/Documents/GitHub/OpenSesame/smack_sl/src\smack_dataexchange.c **** 
 110:Z:/Documents/GitHub/OpenSesame/smack_sl/src\smack_dataexchange.c ****     // Setup NFC data point exchange
 111:Z:/Documents/GitHub/OpenSesame/smack_sl/src\smack_dataexchange.c ****     // The smack_exchange_handler() callback must be configured in the APARAM block
 112:Z:/Documents/GitHub/OpenSesame/smack_sl/src\smack_dataexchange.c ****     smack_exchange_init(data_point_list, data_point_count);
 113:Z:/Documents/GitHub/OpenSesame/smack_sl/src\smack_dataexchange.c **** 
 114:Z:/Documents/GitHub/OpenSesame/smack_sl/src\smack_dataexchange.c ****     smack_exchange_key_set(&aes_default_key);
 115:Z:/Documents/GitHub/OpenSesame/smack_sl/src\smack_dataexchange.c **** }
  48              	 .loc 1 115 1 view .LVU7
  49              	 
 102:Z:/Documents/GitHub/OpenSesame/smack_sl/src\smack_dataexchange.c ****     uid = ((uint64_t)dparams.chip_uid.uid[0] << 48) |
  50              	 .loc 1 102 42 view .LVU8
  51 000a 134A     	 ldr r2,.L2+4
 103:Z:/Documents/GitHub/OpenSesame/smack_sl/src\smack_dataexchange.c ****           ((uint64_t)dparams.chip_uid.uid[1] << 40) |
  52              	 .loc 1 103 12 view .LVU9
  53 000c 1349     	 ldr r1,.L2+8
 102:Z:/Documents/GitHub/OpenSesame/smack_sl/src\smack_dataexchange.c ****     uid = ((uint64_t)dparams.chip_uid.uid[0] << 48) |
  54              	 .loc 1 102 12 view .LVU10
  55 000e 9B00     	 lsls r3,r3,#2
  56 0010 D35C     	 ldrb r3,[r2,r3]
 103:Z:/Documents/GitHub/OpenSesame/smack_sl/src\smack_dataexchange.c ****           ((uint64_t)dparams.chip_uid.uid[1] << 40) |
  57              	 .loc 1 103 12 view .LVU11
  58 0012 515C     	 ldrb r1,[r2,r1]
 102:Z:/Documents/GitHub/OpenSesame/smack_sl/src\smack_dataexchange.c ****     uid = ((uint64_t)dparams.chip_uid.uid[0] << 48) |
  59              	 .loc 1 102 46 view .LVU12
  60 0014 1B04     	 lsls r3,r3,#16
 105:Z:/Documents/GitHub/OpenSesame/smack_sl/src\smack_dataexchange.c ****           ((uint64_t)dparams.chip_uid.uid[4] << 16) |
  61              	 .loc 1 105 12 view .LVU13
  62 0016 124D     	 ldr r5,.L2+12
 103:Z:/Documents/GitHub/OpenSesame/smack_sl/src\smack_dataexchange.c ****           ((uint64_t)dparams.chip_uid.uid[1] << 40) |
  63              	 .loc 1 103 46 view .LVU14
  64 0018 0902     	 lsls r1,r1,#8
 102:Z:/Documents/GitHub/OpenSesame/smack_sl/src\smack_dataexchange.c ****     uid = ((uint64_t)dparams.chip_uid.uid[0] << 48) |
  65              	 .loc 1 102 53 view .LVU15
  66 001a 1943     	 orrs r1,r3
 108:Z:/Documents/GitHub/OpenSesame/smack_sl/src\smack_dataexchange.c **** 
  67              	 .loc 1 108 46 view .LVU16
  68 001c 114B     	 ldr r3,.L2+16
 105:Z:/Documents/GitHub/OpenSesame/smack_sl/src\smack_dataexchange.c ****           ((uint64_t)dparams.chip_uid.uid[4] << 16) |
  69              	 .loc 1 105 12 view .LVU17
  70 001e 555D     	 ldrb r5,[r2,r5]
 108:Z:/Documents/GitHub/OpenSesame/smack_sl/src\smack_dataexchange.c **** 
  71              	 .loc 1 108 46 view .LVU18
  72 0020 D35C     	 ldrb r3,[r2,r3]
 105:Z:/Documents/GitHub/OpenSesame/smack_sl/src\smack_dataexchange.c ****           ((uint64_t)dparams.chip_uid.uid[4] << 16) |
  73              	 .loc 1 105 46 view .LVU19
  74 0022 2D06     	 lsls r5,r5,#24
 107:Z:/Documents/GitHub/OpenSesame/smack_sl/src\smack_dataexchange.c ****           ((uint64_t)dparams.chip_uid.uid[6] <<  0);
  75              	 .loc 1 107 53 view .LVU20
  76 0024 2B43     	 orrs r3,r5
 106:Z:/Documents/GitHub/OpenSesame/smack_sl/src\smack_dataexchange.c ****           ((uint64_t)dparams.chip_uid.uid[5] <<  8) |
  77              	 .loc 1 106 12 view .LVU21
  78 0026 E125     	 movs r5,#225
  79 0028 AD00     	 lsls r5,r5,#2
  80 002a 555D     	 ldrb r5,[r2,r5]
 104:Z:/Documents/GitHub/OpenSesame/smack_sl/src\smack_dataexchange.c ****           ((uint64_t)dparams.chip_uid.uid[3] << 24) |
  81              	 .loc 1 104 12 view .LVU22
  82 002c 0E4C     	 ldr r4,.L2+20
 106:Z:/Documents/GitHub/OpenSesame/smack_sl/src\smack_dataexchange.c ****           ((uint64_t)dparams.chip_uid.uid[5] <<  8) |
  83              	 .loc 1 106 46 view .LVU23
  84 002e 2D04     	 lsls r5,r5,#16
 107:Z:/Documents/GitHub/OpenSesame/smack_sl/src\smack_dataexchange.c ****           ((uint64_t)dparams.chip_uid.uid[6] <<  0);
  85              	 .loc 1 107 53 view .LVU24
  86 0030 2B43     	 orrs r3,r5
 107:Z:/Documents/GitHub/OpenSesame/smack_sl/src\smack_dataexchange.c ****           ((uint64_t)dparams.chip_uid.uid[6] <<  0);
  87              	 .loc 1 107 12 view .LVU25
  88 0032 0E4D     	 ldr r5,.L2+24
 104:Z:/Documents/GitHub/OpenSesame/smack_sl/src\smack_dataexchange.c ****           ((uint64_t)dparams.chip_uid.uid[3] << 24) |
  89              	 .loc 1 104 12 view .LVU26
  90 0034 145D     	 ldrb r4,[r2,r4]
 107:Z:/Documents/GitHub/OpenSesame/smack_sl/src\smack_dataexchange.c ****           ((uint64_t)dparams.chip_uid.uid[6] <<  0);
  91              	 .loc 1 107 12 view .LVU27
  92 0036 525D     	 ldrb r2,[r2,r5]
 102:Z:/Documents/GitHub/OpenSesame/smack_sl/src\smack_dataexchange.c ****           ((uint64_t)dparams.chip_uid.uid[1] << 40) |
  93              	 .loc 1 102 9 view .LVU28
  94 0038 0D48     	 ldr r0,.L2+28
 107:Z:/Documents/GitHub/OpenSesame/smack_sl/src\smack_dataexchange.c ****           ((uint64_t)dparams.chip_uid.uid[6] <<  0);
  95              	 .loc 1 107 46 view .LVU29
  96 003a 1202     	 lsls r2,r2,#8
 107:Z:/Documents/GitHub/OpenSesame/smack_sl/src\smack_dataexchange.c ****           ((uint64_t)dparams.chip_uid.uid[6] <<  0);
  97              	 .loc 1 107 53 view .LVU30
  98 003c 1343     	 orrs r3,r2
  99 003e 2143     	 orrs r1,r4
 100 0040 0360     	 str r3,[r0]
 101 0042 4160     	 str r1,[r0,#4]
 112:Z:/Documents/GitHub/OpenSesame/smack_sl/src\smack_dataexchange.c **** 
 102              	 .loc 1 112 5 is_stmt 1 view .LVU31
 103 0044 0C21     	 movs r1,#12
 104 0046 0B48     	 ldr r0,.L2+32
 105 0048 FFF7FEFF 	 bl smack_exchange_init
 106              	.LVL0:
 114:Z:/Documents/GitHub/OpenSesame/smack_sl/src\smack_dataexchange.c **** }
 107              	 .loc 1 114 5 view .LVU32
 108 004c 0A48     	 ldr r0,.L2+36
 109 004e FFF7FEFF 	 bl smack_exchange_key_set
 110              	.LVL1:
 111              	 .loc 1 115 1 is_stmt 0 view .LVU33
 112 0052 70BD     	 pop {r4,r5,r6,pc}
 113              	.L3:
 114              	 .align 2
 115              	.L2:
 116 0054 00000000 	 .word .LANCHOR0
 117 0058 00000000 	 .word dparams
 118 005c 81030000 	 .word 897
 119 0060 83030000 	 .word 899
 120 0064 86030000 	 .word 902
 121 0068 82030000 	 .word 898
 122 006c 85030000 	 .word 901
 123 0070 00000000 	 .word .LANCHOR1
 124 0074 00000000 	 .word data_point_list
 125 0078 00000000 	 .word .LANCHOR2
 126              	 .cfi_endproc
 127              	.LFE49:
 129              	 .section .bss.count8,"aw",%nobits
 130              	 .set .LANCHOR0,.+0
 133              	count8:
 134 0000 00       	 .space 1
 135              	 .section .bss.humidity,"aw",%nobits
 136              	 .align 1
 139              	humidity:
 140 0000 0000     	 .space 2
 141              	 .section .bss.m_reserved,"aw",%nobits
 142              	 .align 2
 145              	m_reserved:
 146 0000 00000000 	 .space 4
 147              	 .section .bss.pressure,"aw",%nobits
 148              	 .align 1
 151              	pressure:
 152 0000 0000     	 .space 2
 153              	 .section .bss.scratch64,"aw",%nobits
 154              	 .align 3
 157              	scratch64:
 158 0000 00000000 	 .space 8
 158      00000000 
 159              	 .section .bss.scratch8,"aw",%nobits
 162              	scratch8:
 163 0000 00       	 .space 1
 164              	 .section .bss.scratch_str,"aw",%nobits
 167              	scratch_str:
 168 0000 00000000 	 .space 100
 168      00000000 
 168      00000000 
 168      00000000 
 168      00000000 
 169              	 .section .bss.temperature,"aw",%nobits
 170              	 .align 1
 173              	temperature:
 174 0000 0000     	 .space 2
 175              	 .section .bss.uid,"aw",%nobits
 176              	 .align 3
 177              	 .set .LANCHOR1,.+0
 180              	uid:
 181 0000 00000000 	 .space 8
 181      00000000 
 182              	 .section .rodata.aes_default_key,"a"
 183              	 .align 2
 184              	 .set .LANCHOR2,.+0
 187              	aes_default_key:
 188 0000 00       	 .byte 0
 189 0001 01       	 .byte 1
 190 0002 02       	 .byte 2
 191 0003 03       	 .byte 3
 192 0004 04       	 .byte 4
 193 0005 05       	 .byte 5
 194 0006 06       	 .byte 6
 195 0007 07       	 .byte 7
 196 0008 08       	 .byte 8
 197 0009 09       	 .byte 9
 198 000a 0A       	 .byte 10
 199 000b 0B       	 .byte 11
 200 000c 0C       	 .byte 12
 201 000d 0D       	 .byte 13
 202 000e 0E       	 .byte 14
 203 000f 0F       	 .byte 15
 204              	 .section .rodata.data_point_list,"a"
 205              	 .align 2
 208              	data_point_list:
 209 0000 0400     	 .short 4
 210 0002 09       	 .byte 9
 211 0003 08       	 .byte 8
 212 0004 00000000 	 .word uid
 213 0008 00000000 	 .word 0
 214 000c 00000000 	 .word 0
 215 0010 0500     	 .short 5
 216 0012 09       	 .byte 9
 217 0013 08       	 .byte 8
 218 0014 00000000 	 .word scratch64
 219 0018 00000000 	 .word 0
 220 001c 00000000 	 .word 0
 221 0020 3000     	 .short 48
 222 0022 03       	 .byte 3
 223 0023 01       	 .byte 1
 224 0024 00000000 	 .word count8
 225 0028 00000000 	 .word 0
 226 002c 00000000 	 .word 0
 227 0030 8000     	 .short 128
 228 0032 04       	 .byte 4
 229 0033 02       	 .byte 2
 230 0034 00000000 	 .word temperature
 231 0038 00000000 	 .word 0
 232 003c 00000000 	 .word 0
 233 0040 8100     	 .short 129
 234 0042 04       	 .byte 4
 235 0043 02       	 .byte 2
 236 0044 00000000 	 .word humidity
 237 0048 00000000 	 .word 0
 238 004c 00000000 	 .word 0
 239 0050 8200     	 .short 130
 240 0052 04       	 .byte 4
 241 0053 02       	 .byte 2
 242 0054 00000000 	 .word pressure
 243 0058 00000000 	 .word 0
 244 005c 00000000 	 .word 0
 245 0060 8300     	 .short 131
 246 0062 06       	 .byte 6
 247 0063 04       	 .byte 4
 248 0064 00000000 	 .word m_reserved
 249 0068 00000000 	 .word 0
 250 006c 00000000 	 .word 0
 251 0070 0018     	 .short 6144
 252 0072 88       	 .byte -120
 253 0073 08       	 .byte 8
 254 0074 00000000 	 .word scratch64
 255 0078 00000000 	 .word 0
 256 007c 00000000 	 .word 0
 257 0080 0118     	 .short 6145
 258 0082 91       	 .byte -111
 259 0083 63       	 .byte 99
 260 0084 00000000 	 .word scratch_str
 261 0088 00000000 	 .word 0
 262 008c 00000000 	 .word 0
 263 0090 0019     	 .short 6400
 264 0092 83       	 .byte -125
 265 0093 01       	 .byte 1
 266 0094 00000000 	 .word scratch8
 267 0098 00000000 	 .word 0
 268 009c 00000000 	 .word 0
 269 00a0 00F0     	 .short -4096
 270 00a2 87       	 .byte -121
 271 00a3 04       	 .byte 4
 272 00a4 00000000 	 .word sl_counter
 273 00a8 00000000 	 .word 0
 274 00ac 00000000 	 .word 0
 275 00b0 02F0     	 .short -4094
 276 00b2 83       	 .byte -125
 277 00b3 01       	 .byte 1
 278 00b4 00000000 	 .word scratch8
 279 00b8 00000000 	 .word 0
 280 00bc 00000000 	 .word 0
 281              	 .text
 282              	.Letext0:
 283              	 .file 2 "z:\\documents\\github\\opensesame\\tools\\extern\\gcc-arm-none-eabi\\arm-none-eabi\\include\\machine\\_default_types.h"
 284              	 .file 3 "z:\\documents\\github\\opensesame\\tools\\extern\\gcc-arm-none-eabi\\arm-none-eabi\\include\\sys\\_stdint.h"
 285              	 .file 4 "Z:/Documents/GitHub/OpenSesame/smack_rom/libs/smack_lib/inc/aparam.h"
 286              	 .file 5 "Z:/Documents/GitHub/OpenSesame/smack_rom/libs/smack_lib/inc/dparam.h"
 287              	 .file 6 "Z:/Documents/GitHub/OpenSesame/smack_lib/inc/aes_lib.h"
 288              	 .file 7 "Z:/Documents/GitHub/OpenSesame/smack_lib/inc/smack_exchange.h"
 289              	 .file 8 "Z:/Documents/GitHub/OpenSesame/smack_rom/libs/smack_lib/inc/nvm_params.h"
 290              	 .file 9 "Z:/Documents/GitHub/OpenSesame/smack_sl/inc/smack_sl.h"
DEFINED SYMBOLS
                            *ABS*:00000000 smack_dataexchange.c
    {standard input}:16     .text.vars_init:00000000 $t
    {standard input}:24     .text.vars_init:00000000 vars_init
    {standard input}:116    .text.vars_init:00000054 $d
    {standard input}:208    .rodata.data_point_list:00000000 data_point_list
    {standard input}:133    .bss.count8:00000000 count8
    {standard input}:134    .bss.count8:00000000 $d
    {standard input}:136    .bss.humidity:00000000 $d
    {standard input}:139    .bss.humidity:00000000 humidity
    {standard input}:142    .bss.m_reserved:00000000 $d
    {standard input}:145    .bss.m_reserved:00000000 m_reserved
    {standard input}:148    .bss.pressure:00000000 $d
    {standard input}:151    .bss.pressure:00000000 pressure
    {standard input}:154    .bss.scratch64:00000000 $d
    {standard input}:157    .bss.scratch64:00000000 scratch64
    {standard input}:162    .bss.scratch8:00000000 scratch8
    {standard input}:163    .bss.scratch8:00000000 $d
    {standard input}:167    .bss.scratch_str:00000000 scratch_str
    {standard input}:168    .bss.scratch_str:00000000 $d
    {standard input}:170    .bss.temperature:00000000 $d
    {standard input}:173    .bss.temperature:00000000 temperature
    {standard input}:176    .bss.uid:00000000 $d
    {standard input}:180    .bss.uid:00000000 uid
    {standard input}:183    .rodata.aes_default_key:00000000 $d
    {standard input}:187    .rodata.aes_default_key:00000000 aes_default_key
    {standard input}:205    .rodata.data_point_list:00000000 $d

UNDEFINED SYMBOLS
smack_exchange_init
smack_exchange_key_set
dparams
sl_counter
